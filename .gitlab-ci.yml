image: registry.gitlab.com/josm/docker-library/openjdk-8-josmplugin-openjfx:latest

stages:
  - build
  - test
  - deploy
  - release

assemble:
  stage: build
  variables:
    OPENJFX_CLASSPATH: "/usr/share/java/openjfx/jre/lib/ext/jfxrt.jar"
  script:
    - ./gradlew assemble --stacktrace
  artifacts:
    paths:
      - build/
  except:
    - schedules

java 11 assemble:
  stage: build
  image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
  script:
    - ./gradlew assemble --stacktrace
  artifacts:
    paths:
      - build/
  except:
    - schedules

build:
  stage: test
  variables:
    OPENJFX_CLASSPATH: "/usr/share/java/openjfx/jre/lib/ext/jfxrt.jar"
  script:
    - ./gradlew build generatePot --stacktrace
  artifacts:
    paths:
      - build/
  dependencies:
    - assemble
  except:
    - schedules

java 11 build:
  stage: test
  image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
  script:
    - ./gradlew build --stacktrace
  dependencies:
    - java 11 assemble
  except:
    - schedules

min JOSM compile:
  stage: test
  image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
  script:
    - ./gradlew compileJava_minJosm --stacktrace
  dependencies:
    - java 11 assemble
  except:
    - schedules

latest JOSM compile:
  stage: test
  image: registry.gitlab.com/josm/docker-library/openjdk-11-josmplugin:latest
  script:
    - ./gradlew compileJava_latestJosm --stacktrace
  only:
    - schedules

upload to transifex:
  image: registry.gitlab.com/josm/docker-library/python-transifex:latest
  stage: deploy
  environment:
    name: transifex
    url: https://www.transifex.com/josm/josm/josm-plugin_matsim/
  script:
    - TX_TOKEN="$TRANSIFEX_TOKEN" tx push -s --no-interactive
  dependencies:
    - build
  only:
    - master@JOSM/plugin/matsim
  except:
    - schedules

package to GitLab.com:
  stage: deploy
  variables:
    OPENJFX_CLASSPATH: "/usr/share/java/openjfx/jre/lib/ext/jfxrt.jar"
  environment:
    name: GitLab.com / Maven packages
    url: https://gitlab.com/JOSM/plugin/matsim/-/packages
  script:
    - ./gradlew publishAllPublicationsToGitlabRepository
  dependencies:
    - build
  only:
    - tags@JOSM/plugin/matsim
  except:
    - schedules

push GitLab.com pages branch:
  stage: deploy
  environment:
    name: GitLab.com / pages branch
    url: https://gitlab.com/JOSM/plugin/matsim/tree/pages/dist
  script:
    - |
      base64 --decode "$SSH_PRIVATE_DEPLOY_KEY" > ~/.ssh/id_rsa
      chmod 600 ~/.ssh/id_rsa
      git clone --depth 1 --branch pages git@gitlab.com:JOSM/plugin/matsim.git pages
    - |
      version=`git describe --always --dirty`
      longVersion=`git describe --always --long --dirty`
      commitMessage="Release version $longVersion"
    - |
      mkdir -pv "pages/dist/$version"
      cp -v build/dist/* build/tmp/jar/MANIFEST.MF "pages/dist/$version"
      rm -fv "pages/dist/latest"
      ln -s "./$version" "pages/dist/latest"
    - |
      cd pages/
      git config user.name "Deploy with GitLab CI"
      git config user.email "deploy@gitlab.com"
      git stage .
      git commit -a -m "$commitMessage"
      git push origin pages
  dependencies:
    - build
  only:
    - tags@JOSM/plugin/matsim

release to Gitlab.com:
  stage: release
  variables:
    OPENJFX_CLASSPATH: "/usr/share/java/openjfx/jre/lib/ext/jfxrt.jar"
  environment:
    name: GitLab.com / Releases
    url: https://gitlab.com/JOSM/plugin/matsim/-/releases
  script:
    - ./gradlew releaseToGitlab
  dependencies:
    - package to GitLab.com
  only:
    - tags@JOSM/plugin/matsim
  except:
    - schedules
